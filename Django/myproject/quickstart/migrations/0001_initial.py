# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-21 20:10
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_ip_address', models.CharField(blank=True, max_length=256, null=True)),
                ('response_code', models.IntegerField(blank=True, null=True)),
                ('request_duration_ms', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=256, null=True)),
                ('parameters', models.CharField(blank=True, max_length=256, null=True)),
                ('timestamp', models.DateTimeField()),
                ('request_type', models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                'db_table': 'audit_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Auditlogtest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipaddress', models.CharField(blank=True, db_column='ipAddress', max_length=256, null=True)),
                ('executetime', models.CharField(blank=True, db_column='ExecuteTime', max_length=256, null=True)),
                ('requesttime', models.CharField(blank=True, db_column='RequestTime', max_length=256, null=True)),
                ('responsecode', models.CharField(blank=True, db_column='ResponseCode', max_length=256, null=True)),
                ('requesturl', models.CharField(blank=True, db_column='RequestUrl', max_length=256, null=True)),
            ],
            options={
                'db_table': 'AuditLogTest',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryid', models.AutoField(db_column='categoryId', primary_key=True, serialize=False)),
                ('categorydescription', models.TextField(blank=True, db_column='categoryDescription', null=True)),
                ('categoryname', models.CharField(blank=True, db_column='categoryName', max_length=256, null=True)),
            ],
            options={
                'db_table': 'Category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Categorytest',
            fields=[
                ('categoryid', models.AutoField(db_column='categoryId', primary_key=True, serialize=False)),
                ('categorydescription', models.TextField(db_column='categoryDescription')),
            ],
            options={
                'db_table': 'CategoryTest',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('email', models.CharField(blank=True, max_length=11, null=True)),
                ('orderid', models.IntegerField(blank=True, db_column='orderId', null=True)),
                ('status', models.CharField(blank=True, max_length=11, null=True)),
                ('username', models.CharField(blank=True, db_column='userName', max_length=11, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('timestamp', models.DateField(blank=True, db_column='timeStamp', null=True)),
            ],
            options={
                'db_table': 'Feedback',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orderline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantityordered', models.IntegerField(db_column='quantityOrdered')),
                ('priceeach', models.FloatField(db_column='priceEach')),
            ],
            options={
                'db_table': 'OrderLine',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OrderlineCopy',
            fields=[
                ('quantityordered', models.IntegerField(db_column='quantityOrdered', default=0)),
                ('priceeach', models.FloatField(db_column='priceEach')),
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'OrderLine_copy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orderlinetest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantityordered', models.IntegerField(db_column='quantityOrdered')),
                ('priceeach', models.FloatField(db_column='priceEach')),
            ],
            options={
                'db_table': 'OrderLineTest',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='orderId', primary_key=True, serialize=False)),
                ('orderdate', models.DateField(blank=True, db_column='orderDate', null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('discontinued', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Orders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orderstest',
            fields=[
                ('orderid', models.AutoField(db_column='orderId', primary_key=True, serialize=False)),
                ('orderdate', models.DateField(blank=True, db_column='orderDate', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'OrdersTest',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productid', models.AutoField(db_column='productId', primary_key=True, serialize=False)),
                ('productcode', models.CharField(blank=True, db_column='productCode', max_length=255, null=True)),
                ('productname', models.CharField(blank=True, db_column='productName', max_length=255, null=True)),
                ('productdescription', models.TextField(blank=True, db_column='productDescription', null=True)),
                ('quantityinstock', models.IntegerField(db_column='quantityInStock', default=0)),
                ('buyprice', models.FloatField(db_column='buyPrice')),
                ('discontinued', models.IntegerField(blank=True, null=True)),
                ('categoryid', models.ForeignKey(blank=True, db_column='categoryId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Category')),
            ],
            options={
                'db_table': 'Product',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Producttest',
            fields=[
                ('productid', models.AutoField(db_column='productId', primary_key=True, serialize=False)),
                ('productcode', models.CharField(blank=True, db_column='productCode', max_length=255, null=True)),
                ('productname', models.CharField(blank=True, db_column='productName', max_length=255, null=True)),
                ('productdescription', models.TextField(blank=True, db_column='productDescription', null=True)),
                ('quantityinstock', models.IntegerField(db_column='quantityInStock')),
                ('buyprice', models.FloatField(db_column='buyPrice')),
                ('discontinued', models.IntegerField(blank=True, null=True)),
                ('categoryid', models.ForeignKey(blank=True, db_column='categoryId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Category')),
            ],
            options={
                'db_table': 'ProductTest',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(db_column='userId', primary_key=True, serialize=False)),
                ('customername', models.CharField(db_column='customerName', max_length=255, unique=True)),
                ('contactfirstname', models.CharField(blank=True, db_column='contactFirstName', max_length=255, null=True)),
                ('contactlastname', models.CharField(blank=True, db_column='contactLastName', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('addressline1', models.CharField(blank=True, db_column='addressLine1', max_length=255, null=True)),
                ('addressline2', models.CharField(blank=True, db_column='addressLine2', max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='postalCode', max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Userstest',
            fields=[
                ('userid', models.AutoField(db_column='userId', primary_key=True, serialize=False)),
                ('customername', models.CharField(db_column='customerName', max_length=255)),
                ('contactfirstname', models.CharField(blank=True, db_column='contactFirstName', max_length=255, null=True)),
                ('contactlastname', models.CharField(blank=True, db_column='contactLastName', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('addressline1', models.CharField(blank=True, db_column='addressLine1', max_length=255, null=True)),
                ('addressline2', models.CharField(blank=True, db_column='addressLine2', max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('postalcode', models.CharField(blank=True, db_column='postalCode', max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'UsersTest',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='orders',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='userId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Users'),
        ),
        migrations.AddField(
            model_name='orderlinetest',
            name='orderid',
            field=models.ForeignKey(db_column='orderId', on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Orders'),
        ),
        migrations.AddField(
            model_name='orderlinetest',
            name='productid',
            field=models.ForeignKey(db_column='productId', on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Product'),
        ),
        migrations.AddField(
            model_name='orderlinecopy',
            name='orderid',
            field=models.ForeignKey(db_column='orderId', on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Orders'),
        ),
        migrations.AddField(
            model_name='orderlinecopy',
            name='productid',
            field=models.ForeignKey(db_column='productId', on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Product'),
        ),
        migrations.AddField(
            model_name='orderline',
            name='orderid',
            field=models.ForeignKey(db_column='orderId', on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Orders'),
        ),
        migrations.AddField(
            model_name='orderline',
            name='productid',
            field=models.ForeignKey(db_column='productId', on_delete=django.db.models.deletion.DO_NOTHING, to='quickstart.Product'),
        ),
    ]
